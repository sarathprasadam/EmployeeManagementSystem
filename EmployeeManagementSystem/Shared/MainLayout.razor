@inherits LayoutComponentBase
@using EmployeeManagementSystem.Data;
@using EmployeeManagementSystem.Pages;
@inject DataController controller
@inject IToastService toastService

<PageTitle>Employee Software</PageTitle>

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
           
          <span style="font-weight:bold">@username</span> 
            @if (success)
            {
                <button @onclick="@(()=>logout())" class="btn btn-link">Logout</button>
            }
          @if(username=="admin")
            {
                <button  @onclick="@(()=>CreateUser())"  class="btn btn-link">Creat User</button>
            }
        </div>

        <article class="content px-4">
           @if(success)
           {
                @Body
           }
            else
            {
                
                <div class="loginContainer">
                    <div class="loginBox">
                        
                        <BlazoredToasts 
                        Timeout="5"></BlazoredToasts>
                        <EditForm Model="@loginUser" OnValidSubmit="HandleSubmit">
                         <div>
                            <label class="form-label" for="name">UserName:</label>
                            <InputText id="name" class="form-control" @bind-Value="@loginUser.username"></InputText>
        
                        </div>
                        <div>
                            <label class="form-label" for="name">Password:</label>
                            <InputText id="name"  type="password" class="form-control" @bind-Value="@loginUser.password"></InputText>
        
                        </div>
                
                            <button type="submit" class="btn btn-success">Login</button>
               
                   
                
                        </EditForm>
                    </div>
                </div>
            }

        </article>
    </main>
</div>
@code{

    bool success=false;
    Login loginUser = new();
    string username;

    [CascadingParameter] public IModalService Modal { get; set; }
    private async void HandleSubmit()
    {
        Login user = new();          
        user = Task.Run(() => controller.GetUser(loginUser.username)).Result;
        if(user==null)
        {
            toastService.ShowError("Username does not exist");
            loginUser = new();
        }
        else
        {
            var encrypted = Encryption.Encrpt(loginUser.password);
            if(encrypted==user.password)
            {
                toastService.ShowSuccess("Login successful");
                success = true;                
                username = loginUser.username;
                await Task.Delay(1000);
                this.StateHasChanged();
            }
            else
            {
                toastService.ShowError("Incorrect Password");
                loginUser = new();
            }
        }
    }
    public void CreateUser()
    {
        Modal.Show<LoginPage>();
    }
    public void logout()
    {
        loginUser = new();
        success = false;
    }

}